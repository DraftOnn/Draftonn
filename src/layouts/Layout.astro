---
export interface Props {
	title: string;
}

const { title } = Astro.props;

import { appwriteDatabases } from '../lib/backend';
import { Query } from 'appwrite';

let user = Astro.cookies.get('user').value as string;
let Name = Astro.cookies.get('userName').value;
let loggedIn = user && user !== 'undefined';

let Docs = [] as any[]

if (loggedIn) {
	await appwriteDatabases.listDocuments(
		'648bc6ddddf63e135f4d',
		'648bc7024074897c154d', 
		[
			Query.search('AuthorUid', user),
		])
		.then((response) => {
			Docs = response.documents as any[];
		})
}
import Create from '../components/global/create.svelte';
---
<script>
	import { appwriteUser } from "../lib/backend";

	let LogOutBtn = document.getElementById('logout') as HTMLAnchorElement;

	LogOutBtn.onclick = function logOut() {
		appwriteUser.deleteSession('current').then(() => {
			document.cookie = `user=; expires=${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toUTCString()}; path=/`;
			document.cookie = `userName=; expires=${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toUTCString()}; path=/`;
			document.cookie = `session=; expires=${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toUTCString()}; path=/`;
			window.location.href = '/';
		});
	}
</script>
<!DOCTYPE html>
<html lang="en" class="bg-gray-200 text-gray-900">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<!--  a nav that is a side drawer on both mobile and desktop -->
	<nav>
		<!--  an arrow that is on the edge of the nav -->
		<p class="text-2xl 2xl:text-4xl text-right mr-1">‚áí</p>
		{loggedIn ? (
			<>
			<div class="flex flex-row justify-center text-2xl">
				<div class="tooltip" data-tip="Home">
				<a href="/dashboard">üè†</a>
				</div>
				<div class="tooltip" data-tip="Profile">
				<a href="/profile">üìå</a>
				</div>
				<div class="tooltip" data-tip="Logout">
				<a id="logout">‚Ü©Ô∏è</a>
				</div>
			</div>
			<div class="flex justify-center">
				<Create client:only="Svelte" AuthorName={Name} AuthorUid={user} />
			</div>
			<div class="flex flex-col justify-center">
				{Docs.map((doc) => (
					<div class="flex flex-row justify-center">
						<a href={`/doc/${doc.$id}`} class="text-2xl text-black">{doc.Title}</a>
					</div>
				))}
			</div>
			</>
		) : (
			<>
			<div class="flex flex-row justify-center text-2xl">
				<div class="tooltip" data-tip="Home">
				<a href="/">üè†</a>
				</div>
				<div class="tooltip" data-tip="Login">
				<a href="/login">üîë</a>
				</div>
				<div class="tooltip" data-tip="Signup">
				<a href="/signup">üìù</a>
				</div>
			</div>
			</>
		)}
	</nav>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
		background-color: #F6F6F6;
		color: #000000;
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #F6F6F6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
	/*  make the nav a side drawer on mobile and desktop */
	nav {
		position: fixed;
		top: 0;
		left: 0;
		width: 20vw;
		height: 100vh;
		background-color: white;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		transform: translateX(-90%);
		transition: transform 0.3s ease-in-out;
		z-index: 100;
	}

	/*  on mobile, make the nav full screen */
	@media (max-width: 600px) {
		nav {
			width: 100vw;
		}
	}

	nav:hover {
		transform: translateX(0);
	}
	nav a {
		display: block;
		padding: 0.5rem;
		text-decoration: none;
		color: black;
	}
	nav a:hover {
		background-color: #f1f1f1;
	}
	nav a:active {
		background-color: #e1e1e1;
	}
	nav a:focus {
		outline: 2px solid #f1f1f1;
	}
</style>
